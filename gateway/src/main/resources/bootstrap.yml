spring:
  application:
    # 应用名称
    name: gateway
  cloud:
    # 使用 Nacos 作为服务注册发现
    nacos:
      discovery:
        server-addr: 192.168.179.138:8848
    # 使用 Sentinel 作为熔断器
    sentinel:
      transport:
        dashboard: localhost:8888
    # 路由网关配置
    gateway:
      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
      discovery:
        locator:
          enabled: true
      # 配置路由规则
      routes:
          # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
        - id: SERVICE-CONSUMER-LOADBALANCE
          # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
          uri: lb://service-consumer-loadbalance
          # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
          predicates:
            - Path=/api/loadbalance
          filters:
          # 前缀过滤，默认配置下，我们的请求路径是 http://localhost:10001/service-consumer-loadbalance/** 这时会路由到指定的服务
          # 此处配置去掉1个路径前缀，再配置上面的 Path=/api/**，就能按照 http://localhost:10001/api/** 的方式访问了
            - StripPrefix=1
        - id: SERVICE-CONSUMER-FEIGN
          uri: lb://service-consumer-feign
          predicates:
            - Path=/api/feign

server:
  port: 10001

management:
  endpoints:
    web:
      exposure:
        include: "*"